# Colors
turquoise=$(tput setaf 053)
pink=$(tput setaf 213)
bright_blue=$(tput setaf 055)
purple=$(tput setaf 05)
white=$(tput setaf 07)

# Text Format
bold=$(tput bold)
reset=$(tput sgr0)

prompt_git() {
	local branchName='';
    local username='';

	# Check if the current directory is in a Git repository.
	git rev-parse --is-inside-work-tree &>/dev/null || return;

    # Check for current user profile
    username="$(git config --get user.profile)";

	# Check for what branch we’re on.
	# Get the short symbolic ref. If HEAD isn’t a symbolic ref, get a
	# tracking remote branch or tag. Otherwise, get the
	# short SHA for the latest commit, or give up.
	branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
		git describe --all --exact-match HEAD 2> /dev/null || \
		git rev-parse --short HEAD 2> /dev/null || \
		echo '(unknown)')";

	echo -e " ${1}${username} ${2}→ ${3}(${branchName})";
}


# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
	userStyle="${red}";
else
	userStyle="${blue}";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
	hostStyle="${bold}${cyan}";
else
	hostStyle="${cyan}";
fi;

PS1="\[${bold}\]"
PS1+="\[${turquoise}\][ \w ]"
PS1+="\$(prompt_git \"\[${bright_blue}\]\" \"\[${white}\]\" \"\[${purple}\]\")"
PS1+="\n";
PS1+="\[${pink}\]> ";
PS1+="\[${reset}\]";
export PS1;
